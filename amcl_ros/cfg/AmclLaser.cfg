#!/usr/bin/env python

PACKAGE = 'amcl_ros'

from math import pi
from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

# Laser Model Parameters
gen.add("min_range", double_t, 0, "Minimum scan range to be considered; -1.0 will cause the laser's reported minimum range to be used.", -1, -1, 1000)
gen.add("max_range", double_t, 0, "Maximum scan range to be considered; -1.0 will cause the laser's reported maximum range to be used.", -1, -1, 1000)

gen.add("max_beams", int_t, 0, "How many evenly-spaced beams in each scan to be used when updating the filter.", 30, 0, 100)

gen.add("z_hit", double_t, 0, "Mixture weight for the z_hit part of the model.", .95, 0, 10)
gen.add("z_short", double_t, 0, "Mixture weight for the z_short part of the model.", .1, 0, 10)
gen.add("z_max", double_t, 0, "Mixture weight for the z_max part of the model.", .05, 0, 10)
gen.add("z_rand", double_t, 0, "Mixture weight for the z_rand part of the model.", .05, 0, 10)

gen.add("sigma_hit", double_t, 0, "Standard deviation for Gaussian model used in z_hit part of the model.", .2, 0, 10)
gen.add("lambda_short", double_t, 0, "Exponential decay parameter for z_short part of model.", .1, 0, 10)
gen.add("likelihood_max_dist", double_t, 0, "Maximum distance to do obstacle inflation on map, for use in likelihood_field model.", 2, 0, 20)

lmt = gen.enum([ gen.const("beam_const", str_t, "beam", "Use beam laser model"), gen.const("likelihood_field_const", str_t, "likelihood_field", "Use likelihood_field laser model")], "Laser Models")
gen.add("model_type", str_t, 0, "Which model to use, either beam or likelihood_field.", "likelihood_field", edit_method = lmt)

gen.add("restore_defaults", bool_t, 0, "Restore the default configuration", False)

exit(gen.generate(PACKAGE, "amcl", "AmclLaser"))
